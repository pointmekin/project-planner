{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","console","log","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","authorID","Date","App","Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ef6d7698.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.signOut}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => {\r\n      dispatch(signOut());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((resp) => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({\r\n          type: \"SIGNUP_SUCCESS\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst NavBar = (props) => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  console.log(auth);\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo left\">\r\n          MarioPlan\r\n        </Link>\r\n\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map((item) => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user} </span>\r\n                    <span>{item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n          <span className=\"card-title\">{project.title}</span>\r\n          <p>\r\n            Posted by {project.authorFirstName} {project.authorLastName}\r\n          </p>\r\n          <p className=\"grey-text\">\r\n            {moment(project.createdAt.toDate()).calendar()}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map((project) => {\r\n          return (\r\n            <Link to={\"/project/\" + project.id} key={project.id}>\r\n              <ProjectSummary project={project}></ProjectSummary>\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    //console.log(this.props);\r\n\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects}></ProjectList>\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] },\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n\r\n  if (!auth.uid) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>\r\n              Posted by {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={this.handleChange}\r\n            ></input>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth=0\">Login</button>\r\n            <div className=\"red-text- center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => {\r\n      dispatch(signIn(creds));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">SignUp</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={this.handleChange}\r\n            ></input>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">Firstname</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              onChange={this.handleChange}\r\n            ></input>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Lastname</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              onChange={this.handleChange}\r\n            ></input>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth=0\">Sign up</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => {\r\n      dispatch(signUp(newUser));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) {\r\n      return <Redirect to=\"/signin\" />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange}></input>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              onChange={this.handleChange}\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth=0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst matpDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => {\r\n      dispatch(createProject(project));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, matpDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    //make async call to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorID: authorId,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\nimport \"./index.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login error\");\r\n      return {\r\n        ...state,\r\n\r\n        authError: \"Login failed\",\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"SIGNUP_ERROR\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"help me find peach\", content: \"bla ba bla\" },\r\n    { id: \"2\", title: \"help me find nova fluffy husky\", content: \"bla ba bla\" },\r\n    { id: \"3\", title: \"help me find myself\", content: \"bla ba bla\" },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"create project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"create project error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCZ-cQJvzZF504vLjN2xQq3jKoO_9ojNh8\",\r\n  authDomain: \"project-planner-1f01f.firebaseapp.com\",\r\n  databaseURL: \"https://project-planner-1f01f.firebaseio.com\",\r\n  projectId: \"project-planner-1f01f\",\r\n  storageBucket: \"project-planner-1f01f.appspot.com\",\r\n  messagingSenderId: \"1022479232792\",\r\n  appId: \"1:1022479232792:web:52c78eb0c32f05868b386d\",\r\n  measurementId: \"G-1DJGHDYQXK\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider, useSelector } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  createFirestoreInstance,\n  getFirestore,\n  reduxFirestore,\n} from \"redux-firestore\";\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n  isLoaded,\n} from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(fbConfig)\n    //reactReduxFirebase(fbConfig, { attachAuthIsReady: true })\n  )\n);\n\nconst config = {\n  userProfile: \"users\", // where profiles are stored in database,\n  useFirestoreForProfile: true,\n};\n\nconst rrfProps = {\n  firebase,\n  config,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth)) return <div className=\"center\">Loading Screen...</div>;\n  return children;\n}\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />{\" \"}\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}